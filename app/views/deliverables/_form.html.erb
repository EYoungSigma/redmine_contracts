<%= javascript_tag("var i18nStartDateEmpty = '#{l(:text_start_date_empty)}'") %>
<%= javascript_tag("var i18nEndDateEmpty = '#{l(:text_end_date_empty)}'") %>
<%= javascript_tag("var i18nChangedPeriodMessage = '#{l(:text_changed_period_message)}'") %>

<% if resource.locked? || resource.closed? %>
  <div class="error_msg">
    <p><%= resource.locked? ? l(:text_deliverable_locked_warning) : l(:text_deliverable_closed_warning) %></p>
  </div>
<% end %>

<div class="box tabular">
<% form.inputs :name => l(:text_deliverable_details_legend), :id => 'deliverable-details' do %>
  <%# Used by jquery to check if this is a new or existing record %>
  <%= hidden_field_tag('deliverable_id', h(resource.id), :id => 'deliverable_stored_id') %>
  <%= form.input :title, :required => true %>
  <% if resource.new_record? %>
    <li class="select required" id="deliverable_type_input">
      <%= form.label(:type, l(:field_type)) %>
      <%= form.select(:type, Deliverable.valid_types_to_select, {:include_blank => false}, {:class => 'type'}) %>
    </li>
  <% else %>
    <li class="string" id="deliverable_type_input">
      <%= form.label(:type, l(:field_type)) %>
      <span style="padding:3px"><%= h(resource.humanize_type) %></span>
    </li>
    <%= form.input :type, :as => :hidden, :class => 'type' %>
  <% end %>
  <%= form.input :status, :required => true, :collection => [["Open","open"],["Locked","locked"],["Closed","closed"]] %>
  <%= form.input :manager, :required => true, :collection => @project.users.sort %>

  <%= form.input :start_date, :as => :string, :input_html => {:size => 10, :class => 'start-date', :id => 'deliverable_start_date'}, :hint => calendar_for('deliverable_start_date') %>
  <%= hidden_field_tag('deliverable_stored_start_date', h(resource.start_date), :id => 'deliverable_stored_start_date') %>

  <%= form.input :end_date, :as => :string, :input_html => {:size => 10, :class => 'end-date', :id => 'deliverable_end_date'}, :hint => calendar_for('deliverable_end_date') %>
  <%= hidden_field_tag('deliverable_stored_end_date', h(resource.end_date), :id => 'deliverable_stored_end_date') %>

  <%= form.input :notes, :input_html => {:class => 'wiki-edit', :rows => '5'} %>

  <% unless resource.new_record? %>
  <li class="boolean optional">
    <%= label(resource.class.to_s.underscore, 'feature_sign_off') %>
    <%= check_box resource.class.to_s.underscore, 'feature_sign_off' %>
  </li>
  <li class="boolean optional">
    <%= label(resource.class.to_s.underscore, 'warranty_sign_off') %>
    <%= check_box resource.class.to_s.underscore, 'warranty_sign_off' %>
  </li>
  <% end %>
<% end %>

<% if resource.retainer? && resource.respond_to?(:months) %>
<% if resource.months.present? %>
<% resource.months.each do |month| %>
<%= render :partial => 'finance_form', :locals => {:form => form, :labor_budgets => resource.labor_budgets_for_date(month), :overhead_budgets => resource.overhead_budgets_for_date(month), :fixed_budgets => resource.fixed_budgets_for_date(month), :label => l(:text_deliverable_finances_date, :date => month.strftime("%B, %Y")), :fieldset_class => 'date-' + month.strftime('%Y-%m') } %>
<% end %>
<% else %>
<%= content_tag(:p, l(:text_missing_period), :class => 'nodata') %>
<% end %>
<% else %>
<%= render :partial => 'finance_form', :locals => {:form => form, :labor_budgets => resource.labor_budgets, :overhead_budgets => resource.overhead_budgets, :fixed_budgets => resource.fixed_budgets, :label => l(:text_deliverable_finances), :fieldset_class => '' } %>
<% end %>

</div>

<% form.buttons do %>
  <ol>
    <li class="commit">
      <%= submit_tag(l(:button_save)) %>
      <%= link_to(l(:button_cancel), cancel_path) %>
    </li>
  </ol>
<% end %>

<%= wikitoolbar_for resource.to_underscore + '_notes' %>
